###############################################################################
# Terraform and Providers
###############################################################################
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~> 3.0"
    }
    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = "~> 2.22"
    }
    helm = {
      source  = "hashicorp/helm"
      version = "~> 2.10"
    }
  }
  required_version = ">= 1.3.0"
}


###############################################################################
# Azure provider
###############################################################################
provider "azurerm" {
  features {}
}

###############################################################################
# Data source to get the AKS cluster credentials
###############################################################################
data "azurerm_kubernetes_cluster" "my_cluster" {
  name                = var.cluster_name
  resource_group_name = var.resource_group_name
}

###############################################################################
# Configure Kubernetes using the returned kube_config
###############################################################################
provider "kubernetes" {
  host                   = data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.host
  client_certificate     = base64decode(data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.client_certificate)
  client_key             = base64decode(data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.client_key)
  cluster_ca_certificate = base64decode(data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.cluster_ca_certificate)
}

###############################################################################
# Configure Helm similarly
###############################################################################
provider "helm" {
  kubernetes {
    host                   = data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.host
    client_certificate     = base64decode(data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.client_certificate)
    client_key             = base64decode(data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.client_key)
    cluster_ca_certificate = base64decode(data.azurerm_kubernetes_cluster.my_cluster.kube_config.0.cluster_ca_certificate)
  }
}